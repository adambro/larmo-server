"use strict";function AuthorFilter(){return function(a){var b=a.email?' (<a href="mailto:'+a.email+'">'+a.email+"</a>)":"";return a.fullName?"<strong>"+a.fullName+"</strong>"+b:a.nickName?"<strong>"+a.nickName+"</strong>"+b:a.email?a.email:"Anonim"}}function GithubUser(){return function(a){var b="Anonim";return a.nickName?b='<a href="http://github.com/'+a.nickName+'" target="_blank">'+a.nickName+"</a>":a.fullName?b=a.fullName:a.email&&(b=a.email),'<span class="user">'+b+"</span>"}}function GithubAction(){return function(a){var b="";return"github.commit"==a.type?b='<a href="'+a.extras.url+'" target="new">'+a.extras.id.substr(0,10)+"</a>":(a.type.contains("github.pull_request")||a.type.contains("github.issue"))&&(b='<a href="'+a.extras.url+'" target="new">#'+a.extras.number+"</a>"),b}}function GithubExtendedMessage(){return function(a){var b="";return"github.commit"==a.type?b=a.extras.body:"github.issue_opened"==a.type?b="<strong>"+a.extras.title+"</strong><br/>"+a.extras.body:"github.issue_comment_created"==a.type&&(b=a.extras.body),b}}function urlToInspection(){return function(a){return"https://scrutinizer-ci.com/g/"+a.repository.user+"/"+a.repository.name+"/inspections/"+a.id}}function setDescription(){return function(a){var b=[];return[{count:a.results.added_code_elements,text:"code element{{suffix}} {{verb}} added"},{count:a.results.changed_code_elements,text:"code element{{suffix}} {{verb}} changed"},{count:a.results.removed_code_elements,text:"code element{{suffix}} {{verb}} removed"},{count:a.results.new_issues,text:"new issue{{suffix}} {{verb}} introduced"},{count:a.results.fixed_issues,text:"issue{{suffix}} {{verb}} fixed"},{count:a.results.common_issues,text:"issue{{suffix}} unresolved"}].forEach(function(a){a.count>0&&b.push(setTextWithCorrectVerb(a.count,a.text))}),b.join(", ")}}function setTextWithCorrectVerb(a,b){var c="was",d="";return a>1&&(c="were",d="s"),"<strong>"+a+"</strong> "+b.replace("{{suffix}}",d).replace("{{verb}}",c)}function setStatusIcon(){return function(a){return"passed"===a||"fixed"===a?"fa-check":"broken"===a||"failed"===a?"fa-remove":"errored"===a?"fa-exclamation":"fa-gears"}}function setDescription(){return function(a){var b="",c="",d="";return a.git_url&&(c='<a href="'+a.git_url+'">{{number}}</a>'),a.type&&(d=a.type.replace("_"," ")),b="push"===a.type?a.git_number?a.git_number.substr(0,10):"":a.git_number?"#"+a.git_number:"",d+" "+c.replace("{{number}}",b)}}function AppController(a){a._=translation}function MainController(a,b){function c(){b.getAvailableSources().then(function(b){a.sources=b.data})}function d(){var c=angular.copy(a.filters),d=10;b.getLatestMessages(c,d).then(function(b){a.messages=b.data})}a.messages=[],a.filters={source:""},a.setupLatestMessages=d,c(),d()}function ajaxService(a){function b(a){var b="";for(var c in a){var d=a[c];d&&(b+="&"+c+"="+d)}return b}function c(a,c){var d=c?b(c):"";return-1===a.indexOf("?")&&(d=d.replace("&","?")),a+d}function d(a,b){a&&a(b)}function e(b,e,f,g){var b=c(b,e);return console.log("[AjaxService] Sent request GET "+b),a.get(b).success(function(a){console.log("[AjaxService] Response GET "+b,a),d(f,a)}).error(function(a){d(g,a)})}function f(b,c,e,f){return console.log("[AjaxService] Sent request POST "+b,c),a.post(b,c).success(function(a){console.log("[AjaxService] Response POST "+b,a),d(e,a)}).error(function(a){d(f,a)})}var g={get:e,post:f};return g}function apiService(a,b){function c(c,d){var e=angular.extend(c,{limit:d,t:(new Date).getTime()}),f=b.api.url+"/latestMessages";return a.get(f,e)}function d(){var c=b.api.url+"/availableSources";return a.get(c,{t:(new Date).getTime()})}var e={getLatestMessages:c,getAvailableSources:d};return e}var translation={filters:{sourceLabel:"Messages from source:",allSources:"- all sources -"}};app.filter("displayName",AuthorFilter),app.filter("githubUser",GithubUser),app.filter("githubAction",GithubAction),app.filter("githubExtendedMessage",GithubExtendedMessage),app.filter("scrutinizerUrlToInspection",urlToInspection),app.filter("scrutinizerSetDescription",setDescription),app.filter("travisSetStatusIcon",setStatusIcon),app.filter("travisSetDescription",setDescription),app.controller("AppController",AppController),AppController.$inject=["$rootScope"],app.controller("MainController",MainController),MainController.$inject=["$scope","APIService"],app.service("AjaxService",ajaxService),ajaxService.$inject=["$http"],app.service("APIService",apiService),apiService.$inject=["AjaxService","config"];